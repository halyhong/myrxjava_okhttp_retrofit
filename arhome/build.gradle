def extDependencies = rootProject.ext.dependencies

//apply plugin: 'com.android.application'
if (isNeedArHomeModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}


android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"


    defaultConfig {
        if (isNeedArHomeModule.toBoolean()) {

        } else {
            applicationId "com.example.arhome"
        }

        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            if (isNeedArHomeModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'AndroidManifest.xml'
            }

            res.srcDirs = ['src/main/res']
        }
    }

    lintOptions {
        abortOnError true
        warningsAsErrors false
        check('StringFormatInvalid')//只检测该异常
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    annotationProcessor extDependencies["arouter-compiler"]
    implementation extDependencies["arouter-api"]
    implementation project(':commonlib')
}
